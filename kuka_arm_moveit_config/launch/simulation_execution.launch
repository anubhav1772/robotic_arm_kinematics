<launch>

	<!-- By default, we are not in debug mode -->
  	<arg	name="debug"	default="false" />
  	<arg	name="rviz_config"	default="true"	doc=""/>
	<arg 	name="use_gui" default="true" /> 
	<arg	name="load_robot_description"	default="true" />
	
	<!-- We do not have a robot connected, so publish fake joint states -->
	<!-- If you are using Gazebo as your simulator within the ROS framework, 
		 you typically don't need to include the joint_state_publisher separately. 
		 Gazebo provides its own plugin called "gazebo_ros_control" 
		 that automatically publishes joint states to the ROS system.-->
	<!-- https://answers.ros.org/question/252114/failed-to-validate-trajectory-couldnt-receive-full-current-joint-state-within-1s-error/ -->
	<!--
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="$(arg use_gui)"/>
		<rosparam param="source_list">["/kuka_arm/joint_states"]</rosparam>
	</node>
	-->

	<!-- Given the published joint states, publish tf for the robot links -->
	<node	name="robot_state_publisher"				
			pkg="robot_state_publisher"	
			type="robot_state_publisher" 
			respawn="true" 
			output="screen">
		<remap from="joint_states" to="/kuka_arm/joint_states"/>
	</node>

    <!-- http://wiki.ros.org/tf -->
	<!-- static_transform_publisher x y z yaw pitch roll frame_id child_frame_id period_in_ms -->
	<node	name="static_transform_publisher_1"	
			pkg="tf" 
			type="static_transform_publisher" 
          	args="0 0 0 0 0 0 /map /world 100"/>
		
	<!-- Launch moveit -->
	<include	file="$(find kuka_arm_moveit_config)/launch/move_group.launch">
    	<arg 	name="debug"	value="$(arg debug)" />
    	<arg 	name="load_robot_description"	value="$(arg load_robot_description)" />
	</include>

	<!-- Launch rviz-->
	<include	file="$(find kuka_arm_moveit_config)/launch/moveit_rviz.launch">
    	<arg	name="rviz_config"	value="$(arg rviz_config)"/>
    	<arg	name="debug"	value="$(arg debug)"/>
  	</include>

</launch>
